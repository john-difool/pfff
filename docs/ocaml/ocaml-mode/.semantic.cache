;; Object ocaml-mode/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ocaml-mode/"
  :tables (list 
   (semanticdb-table "caml-help.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("if" code nil nil [1900 2006]) ("ocaml-lib-path" variable (:default-value (quote lazy)) nil [2079 2213]) ("ocaml-lib-path" function nil nil [2214 2915]) ("ocaml-capitalize" function (:arguments ("s")) nil [2965 3051]) ("ocaml-uncapitalize" function (:arguments ("s")) nil [3053 3173]) ("iter" function (:arguments ("f" "l")) nil [3175 3253]) ("ocaml-find-files" function (:arguments ("path" "filter" "&optional" "depth" "split")) nil [3255 3980]) ("ocaml-module-alist" variable (:default-value (quote lazy)) nil [4082 4215]) ("ocaml-add-mli-modules" function (:arguments ("modules" "tag" "&optional" "path")) nil [4217 4984]) ("ocaml-add-path" function (:user-visible-flag t :arguments ("dir" "&optional" "path")) nil [4986 5591]) ("ocaml-module-alist" function nil nil [5593 5874]) ("ocaml-get-or-make-module" function (:arguments ("module" "&optional" "tag")) nil [5876 6158]) ("ocaml-module-filename" function (:arguments ("module")) nil [6202 6570]) ("ocaml-module-symbols" function (:arguments ("module-info")) nil [6572 7730]) ("ocaml-visible-modules" variable (:default-value (quote lazy)) nil [7768 7853]) ("make-variable-buffer-local" code nil nil [7854 7905]) ("ocaml-visible-modules" function nil nil [7906 8549]) ("ocaml-open-module" function (:user-visible-flag t :arguments ("arg")) nil [8551 9193]) ("ocaml-close-module" function (:user-visible-flag t :arguments ("arg")) nil [9195 10043]) ("ocaml-qualified-identifier" function (:arguments ("&optional" "show")) nil [10095 11476]) ("ocaml-completion" function (:arguments ("pattern" "module")) nil [11506 12250]) ("caml-complete" function (:user-visible-flag t :arguments ("arg")) nil [12252 15810]) ("ocaml-info-prefix" variable (:default-value "ocaml-lib") nil [15854 16060]) ("ocaml-hevea-info-add-entries" function (:arguments ("entries" "dir" "name")) nil [16066 17575]) ("ocaml-hevea-info" function nil nil [17577 18112]) ("ocaml-ocamldoc-info-add-entries" function (:arguments ("entries" "dir" "name")) nil [18114 19078]) ("ocaml-ocamldoc-info" function nil nil [19080 19672]) ("ocaml-info-alist" variable (:default-value (quote ocaml-ocamldoc-info)) nil [19689 20347]) ("ocaml-info-alist" function nil nil [20349 20630]) ("ocaml-find-module" function (:arguments ("symbol" "&optional" "module-list")) nil [20654 20977]) ("ocaml-buffer-substring" function (:arguments ("region")) nil [20979 21092]) ("ocaml-goto-help" function (:user-visible-flag t :arguments ("&optional" "module" "entry" "same-window")) nil [21115 23473]) ("caml-help" function (:user-visible-flag t :arguments ("arg")) nil [23475 26305]) ("ocaml-link-regexp" variable (:constant-flag t :default-value "\\(type\\|and\\) \\('[a-z] +\\|(\\('[a-z], *\\)*'[a-z])\\|\\) *\\([a-zA-Z0-9_]*\\)\\( *$\\| =\\)") nil [26322 26451]) ("ocaml-longident-regexp" variable (:constant-flag t :default-value "\\([A-Z][a-zA-Z_0]*\\)[.]\\([a-zA-Z][A-Za-z0-9_]*\\)") nil [26452 26542]) ("ocaml-links" variable nil nil [26544 26865]) ("make-variable-buffer-local" code nil nil [26866 26907]) ("ocaml-info-links" function (:arguments ("section")) nil [26909 27554]) ("ocaml-link-map" variable (:default-value (make-sparse-keymap)) nil [27556 27600]) ("define-key" code nil nil [27601 27655]) ("ocaml-link-goto" function (:arguments ("click")) nil [27657 28655]) ("cond" code nil nil [28657 28822]) ("ocaml-link-activate" function (:arguments ("section")) nil [28825 30177]) ("caml-help" package nil nil [31165 31185]))
    :file "caml-help.el"
    :pointmax 31186
    :unmatched-syntax 'nil
    )
   )
  :file ".semantic.cache"
  :semantic-tag-version "2.0pre3"
  :semanticdb-version "2.0pre3"
  )
